spring:
  cloud:
    nacos:
      discovery:
        server-addr: 124.221.56.164:8848
        namespace: 4ad4c584-3999-4cae-9adc-bfaca2a00f0a
    # Sentinel 配置项，对应 SentinelProperties 配置属性类
    sentinel:
      enabled: true
      # 设置是否饥饿加载，默认为 false 关闭。默认情况下，Sentinel 是延迟初始化，在首次使用到 Sentinel 才进行初始化。通过设置为 true 时，在项目启动时就会将 Sentinel 直接初始化，完成向 Sentinel 控制台进行注册。
      eager: true
      transport:
        dashboard: 192.168.56.10:8858
      # 设置拦截请求的地址
      filter:
        url-patterns: /**

    # Spring Cloud Stream 配置项，对应 BindingServiceProperties 类
    stream:
      # Binding 配置项，对应 BindingProperties 是个Map
      bindings:
        demo01-input:
          # 目的地。这里使用 RocketMQ Topic
          destination: DEMO-TOPIC-01
          # 内容格式。这里使用 JSON
          content-type: application/json
          # 消费者分组
          group: demo01-consumer-group-DEMO-TOPIC-01
          # Consumer 配置项，对应 ConsumerProperties 类
          consumer:
            # Spring Cloud Stream 提供的重试间隔，是通过 sleep 实现，会占掉当前线程，影响 Consumer 的消费速度，所以这里并不推荐使用，因此设置 max-attempts 配置项为 1，禁用 Spring Cloud Stream 提供的重试功能，使用 RocketMQ 提供的重试功能。
            max-attempts: 1
        demo02-input:
          # 目的地。这里使用 RocketMQ Topic
          destination: DEMO-TOPIC-01
          # 内容格式。这里使用 JSON
          content-type: application/json
          # 消费者分组
          group: demo02-consumer-group-DEMO-TOPIC-01-x
        demo03-input:
          destination: DEMO-TOPIC-03
          content-type: application/json
          group: demo03-consumer-group-DEMO-TOPIC-03
        demo04-input:
          destination: DEMO-TOPIC-04
          content-type: application/json
          group: demo04-consumer-group-DEMO-TOPIC-04
      # Spring Cloud Stream RocketMQ 配置项
      rocketmq:
        # RocketMQ Binder 配置项，对应 RocketMQBinderConfigurationProperties 类
        binder:
          # RocketMQ Namesrv 地址
          name-server: 192.168.56.10:9876;192.168.56.10:9877
        # RocketMQ 自定义 Binding 配置项，对应 RocketMQBindingProperties Map
        bindings:
          demo01-input:
            # RocketMQ Producer 配置项，对应 RocketMQConsumerProperties 类
            consumer:
              # 是否开启消费，默认为 true
              enabled: true
              # 消费模式
              message-model: CLUSTERING
              # tag订阅消息过滤
              subscription: normal || con
              push:
                # 异步消费消息模式下消费失败重试策略，默认为 0  -1：不重复，直接放入死信队列  0：RocketMQ Broker 控制重试策略
                # 如果无法保证消费重试不会带来副作用，也就是说无法保证消费的幂等性，建议关闭消费重试功能，即设置 delay-level-when-next-consume 配置项为 -1，max-attempts 配置项为 1。
                delay-level-when-next-consume: -1
          demo02-input:
            consumer:
              message-model: BROADCASTING
          demo03-input:
            consumer:
              push:
                # 是否顺序消费，默认为 false 并发消费。
                orderly: true
          demo04-input:
            consumer:
              message-model: CLUSTERING

feign:
  sentinel:
    # 开启 Sentinel 对 Feign 的支持，默认为 false 关闭。
    enabled: true